{
    "account": {
        "type": "string",
        "description": "Charge resources used by this job to specified account"
    },
    "accrue_time": {
        "type": "string",
        "description": "time job is eligible for running"
    },
    "username_comment": {
        "type": "string",
        "description": "usernameistrator's arbitrary comment"
    },
    "array_job_id": {
        "type": "string",
        "description": "job_id of a job array or 0 if N/A"
    },
    "array_task_id": {
        "type": "string",
        "description": "task_id of a job array"
    },
    "array_max_tasks": {
        "type": "string",
        "description": "Maximum number of running array tasks"
    },
    "array_task_string": {
        "type": "string",
        "description": "string expression of task IDs in this record"
    },
    "association_id": {
        "type": "string",
        "description": "association id for job"
    },
    "batch_features": {
        "type": "string",
        "description": "features required for batch script's node"
    },
    "batch_flag": {
        "type": "boolean",
        "description": "if batch: queued job with script"
    },
    "batch_host": {
        "type": "string",
        "description": "name of host running batch script"
    },
    "flags": {
        "type": "array",
        "description": "Job flags",
        "items": {
            "type": "string"
        }
    },
    "burst_buffer": {
        "type": "string",
        "description": "burst buffer specifications"
    },
    "burst_buffer_state": {
        "type": "string",
        "description": "burst buffer state info"
    },
    "cluster": {
        "type": "string",
        "description": "name of cluster that the job is on"
    },
    "cluster_features": {
        "type": "string",
        "description": "comma separated list of required cluster features"
    },
    "command": {
        "type": "string",
        "description": "command to be executed"
    },
    "comment": {
        "type": "string",
        "description": "arbitrary comment"
    },
    "contiguous": {
        "type": "boolean",
        "description": "job requires contiguous nodes"
    },
    "core_spec": {
        "type": "string",
        "description": "specialized core count"
    },
    "thread_spec": {
        "type": "string",
        "description": "specialized thread count"
    },
    "cores_per_socket": {
        "type": "string",
        "description": "cores per socket required by job"
    },
    "billable_tres": {
        "type": "string",
        "description": "billable TRES"
    },
    "cpus_per_task": {
        "type": "string",
        "description": "number of processors required for each task"
    },
    "cpu_frequency_minimum": {
        "type": "string",
        "description": "Minimum cpu frequency"
    },
    "cpu_frequency_maximum": {
        "type": "string",
        "description": "Maximum cpu frequency"
    },
    "cpu_frequency_governor": {
        "type": "string",
        "description": "cpu frequency governor"
    },
    "cpus_per_tres": {
        "type": "string",
        "description": "semicolon delimited list of TRES=# values"
    },
    "deadline": {
        "type": "string",
        "description": "job start deadline "
    },
    "delay_boot": {
        "type": "string",
        "description": "command to be executed"
    },
    "dependency": {
        "type": "string",
        "description": "synchronize job execution with other jobs"
    },
    "derived_exit_code": {
        "type": "string",
        "description": "highest exit code of all job steps"
    },
    "eligible_time": {
        "type": "string",
        "description": "time job is eligible for running"
    },
    "end_time": {
        "type": "string",
        "description": "time of termination, actual or expected"
    },
    "excluded_nodes": {
        "type": "string",
        "description": "comma separated list of excluded nodes"
    },
    "exit_code": {
        "type": "integer",
        "description": "exit code for job"
    },
    "features": {
        "type": "string",
        "description": "comma separated list of required features"
    },
    "federation_origin": {
        "type": "string",
        "description": "Origin cluster's name"
    },
    "federation_siblings_active": {
        "type": "string",
        "description": "string of active sibling names"
    },
    "federation_siblings_viable": {
        "type": "string",
        "description": "string of viable sibling names"
    },
    "gres_detail": {
        "type": "array",
        "description": "Job flags",
        "items": {
            "type": "string"
        }
    },
    "group_id": {
        "type": "string",
        "description": "group job submitted as"
    },
    "job_id": {
        "type": "string",
        "description": "job ID"
    },
    "job_resources": {
        "$ref": "#/components/schemas/v0.0.36_job_resources"
    },
    "job_state": {
        "type": "string",
        "description": "state of the job"
    },
    "last_sched_evaluation": {
        "type": "string",
        "description": "last time job was evaluated for scheduling"
    },
    "licenses": {
        "type": "string",
        "description": "licenses required by the job"
    },
    "max_cpus": {
        "type": "string",
        "description": "maximum number of cpus usable by job"
    },
    "max_nodes": {
        "type": "string",
        "description": "maximum number of nodes usable by job"
    },
    "mcs_label": {
        "type": "string",
        "description": "mcs_label if mcs plugin in use"
    },
    "memory_per_tres": {
        "type": "string",
        "description": "semicolon delimited list of TRES=# values"
    },
    "name": {
        "type": "string",
        "description": "name of the job"
    },
    "nodes": {
        "type": "string",
        "description": "list of nodes allocated to job"
    },
    "nice": {
        "type": "string",
        "description": "requested priority change"
    },
    "tasks_per_core": {
        "type": "string",
        "description": "number of tasks to invoke on each core"
    },
    "tasks_per_socket": {
        "type": "string",
        "description": "number of tasks to invoke on each socket"
    },
    "tasks_per_board": {
        "type": "string",
        "description": "number of tasks to invoke on each board"
    },
    "cpus": {
        "type": "string",
        "description": "minimum number of cpus required by job"
    },
    "node_count": {
        "type": "string",
        "description": "minimum number of nodes required by job"
    },
    "tasks": {
        "type": "string",
        "description": "requested task count"
    },
    "het_job_id": {
        "type": "string",
        "description": "job ID of hetjob leader"
    },
    "het_job_id_set": {
        "type": "string",
        "description": "job IDs for all components"
    },
    "het_job_offset": {
        "type": "string",
        "description": "HetJob component offset from leader"
    },
    "partition": {
        "type": "string",
        "description": "name of assigned partition"
    },
    "memory_per_node": {
        "type": "string",
        "description": "minimum real memory per node"
    },
    "memory_per_cpu": {
        "type": "string",
        "description": "minimum real memory per cpu"
    },
    "minimum_cpus_per_node": {
        "type": "string",
        "description": "minimum # CPUs per node"
    },
    "minimum_tmp_disk_per_node": {
        "type": "string",
        "description": "minimum tmp disk per node"
    },
    "preempt_time": {
        "type": "string",
        "description": "preemption signal time"
    },
    "pre_sus_time": {
        "type": "string",
        "description": "time job ran prior to last suspend"
    },
    "priority": {
        "type": "string",
        "description": "relative priority of the job"
    },
    "profile": {
        "type": "array",
        "description": "Job profiling requested",
        "items": {
            "type": "string"
        }
    },
    "qos": {
        "type": "string",
        "description": "Quality of Service"
    },
    "reboot": {
        "type": "boolean",
        "description": "node reboot requested before start"
    },
    "required_nodes": {
        "type": "string",
        "description": "comma separated list of required nodes"
    },
    "requeue": {
        "type": "boolean",
        "description": "enable or disable job requeue option"
    },
    "resize_time": {
        "type": "string",
        "description": "time of latest size change"
    },
    "restart_cnt": {
        "type": "string",
        "description": "count of job restarts"
    },
    "resv_name": {
        "type": "string",
        "description": "reservation name"
    },
    "shared": {
        "type": "string",
        "description": "type and if job can share nodes with other jobs"
    },
    "show_flags": {
        "type": "array",
        "description": "details requested",
        "items": {
            "type": "string"
        }
    },
    "sockets_per_board": {
        "type": "string",
        "description": "sockets per board required by job"
    },
    "sockets_per_node": {
        "type": "string",
        "description": "sockets per node required by job"
    },
    "start_time": {
        "type": "string",
        "description": "time execution begins, actual or expected"
    },
    "state_description": {
        "type": "string",
        "description": "optional details for state_reason"
    },
    "state_reason": {
        "type": "string",
        "description": "reason job still pending or failed"
    },
    "standard_error": {
        "type": "string",
        "description": "pathname of job's stderr file"
    },
    "standard_input": {
        "type": "string",
        "description": "pathname of job's stdin file"
    },
    "standard_output": {
        "type": "string",
        "description": "pathname of job's stdout file"
    },
    "submit_time": {
        "type": "string",
        "description": "time of job submission"
    },
    "suspend_time": {
        "type": "string",
        "description": "time job last suspended or resumed"
    },
    "system_comment": {
        "type": "string",
        "description": "slurmctld's arbitrary comment"
    },
    "time_limit": {
        "type": "string",
        "description": "maximum run time in minutes"
    },
    "time_minimum": {
        "type": "string",
        "description": "minimum run time in minutes"
    },
    "threads_per_core": {
        "type": "string",
        "description": "threads per core required by job"
    },
    "tres_bind": {
        "type": "string",
        "description": "Task to TRES binding directives"
    },
    "tres_freq": {
        "type": "string",
        "description": "TRES frequency directives"
    },
    "tres_per_job": {
        "type": "string",
        "description": "semicolon delimited list of TRES=# values"
    },
    "tres_per_node": {
        "type": "string",
        "description": "semicolon delimited list of TRES=# values"
    },
    "tres_per_socket": {
        "type": "string",
        "description": "semicolon delimited list of TRES=# values"
    },
    "tres_per_task": {
        "type": "string",
        "description": "semicolon delimited list of TRES=# values"
    },
    "tres_req_str": {
        "type": "string",
        "description": "tres reqeusted in the job"
    },
    "tres_alloc_str": {
        "type": "string",
        "description": "tres used in the job"
    },
    "user_id": {
        "type": "string",
        "description": "user id the job runs as"
    },
    "user_name": {
        "type": "string",
        "description": "user the job runs as"
    },
    "wckey": {
        "type": "string",
        "description": "wckey for job"
    },
    "current_working_directory": {
        "type": "string",
        "description": "pathname of working directory"
    }
}